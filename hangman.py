import random
from os import system

hangman_logo = [
'''
                                                             _______ 
 _                                                          |/      | 
| |                                                         |      
| |__   __ _ _ __   __ _ _ __ ___   __ _ _ __               |      
| '_ \ / _` | '_ \ / _` | '_ ` _ \ / _` | '_ \              |      
| | | | (_| | | | | (_| | | | | | | (_| | | | |             |      
|_| |_|\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|             |          
                    __/ |                                __/|\__       
                   |___/                                '_______'      

''',
'''
                                                             _______ 
 _                                                          |/      | 
| |                                                         |      (_) 
| |__   __ _ _ __   __ _ _ __ ___   __ _ _ __               |      
| '_ \ / _` | '_ \ / _` | '_ ` _ \ / _` | '_ \              |      
| | | | (_| | | | | (_| | | | | | | (_| | | | |             |      
|_| |_|\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|             |          
                    __/ |                                __/|\__       
                   |___/                                '_______'      

''',
'''
                                                             _______ 
 _                                                          |/      | 
| |                                                         |      (_) 
| |__   __ _ _ __   __ _ _ __ ___   __ _ _ __               |       |
| '_ \ / _` | '_ \ / _` | '_ ` _ \ / _` | '_ \              |      
| | | | (_| | | | | (_| | | | | | | (_| | | | |             |      
|_| |_|\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|             |          
                    __/ |                                __/|\__       
                   |___/                                '_______'      

''',
'''
                                                             _______ 
 _                                                          |/      | 
| |                                                         |      (_) 
| |__   __ _ _ __   __ _ _ __ ___   __ _ _ __               |      \|
| '_ \ / _` | '_ \ / _` | '_ ` _ \ / _` | '_ \              |         
| | | | (_| | | | | (_| | | | | | | (_| | | | |             |      
|_| |_|\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|             |          
                    __/ |                                __/|\__       
                   |___/                                '_______'      

''',
'''
                                                             _______ 
 _                                                          |/      | 
| |                                                         |      (_) 
| |__   __ _ _ __   __ _ _ __ ___   __ _ _ __               |      \|/ 
| '_ \ / _` | '_ \ / _` | '_ ` _ \ / _` | '_ \              |      
| | | | (_| | | | | (_| | | | | | | (_| | | | |             |      
|_| |_|\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|             |          
                    __/ |                                __/|\__       
                   |___/                                '_______'      

''',
'''
                                                             _______ 
 _                                                          |/      | 
| |                                                         |      (_) 
| |__   __ _ _ __   __ _ _ __ ___   __ _ _ __               |      \|/ 
| '_ \ / _` | '_ \ / _` | '_ ` _ \ / _` | '_ \              |       |  
| | | | (_| | | | | (_| | | | | | | (_| | | | |             |      
|_| |_|\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|             |          
                    __/ |                                __/|\__       
                   |___/                                '_______'      

''',
'''
                                                             _______ 
 _                                                          |/      | 
| |                                                         |      (_) 
| |__   __ _ _ __   __ _ _ __ ___   __ _ _ __               |      \|/ 
| '_ \ / _` | '_ \ / _` | '_ ` _ \ / _` | '_ \              |       |  
| | | | (_| | | | | (_| | | | | | | (_| | | | |             |      /
|_| |_|\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|             |          
                    __/ |                                __/|\__       
                   |___/                                '_______'      

''',
'''
                                                             _______ 
 _                                                          |/      | 
| |                                                         |      (_) 
| |__   __ _ _ __   __ _ _ __ ___   __ _ _ __               |      \|/ 
| '_ \ / _` | '_ \ / _` | '_ ` _ \ / _` | '_ \              |       |  
| | | | (_| | | | | (_| | | | | | | (_| | | | |             |      / \ 
|_| |_|\__,_|_| |_|\__, |_| |_| |_|\__,_|_| |_|             |          
                    __/ |                                __/|\__       
                   |___/                                '_______'      

''',
]
words = ['computer', 'mouse', 'keyboard', 'monitor', 'laptop', 'notebook', 'screen', 'printer', 'modem', 'scanner', 'python', 'code', 'program', 'developer']
word = words[random.randint(0, len(words) - 1)]
blanks = ['_'] * len(word)
failed = []
times = 0

while True:
  system('clear')
  print(hangman_logo[times])
  print("Hidden word: ", end=' ')
  for item in blanks:
    print(item, end=' ')
  print("\t\tFailed letters: ", end=' ')
  for item in failed:
    print(item, end=' - ')
  if '_' not in blanks:
    print("\n\n** YOU WON !!! :) **\n")
    break
  elif times == 7:
    print("\n\n** YOU LOST :( **\n")
    break
  else:
    letter = input("\n\nEnter a letter: ").lower()
    if letter in word:
      start = 0
      for i in range(0, word.count(letter)):
        letter_index = word.find(letter, start)
        blanks[letter_index] = letter.upper()
        start = letter_index + 1
    else:
      if letter not in failed:
        failed.append(letter.upper())
        times += 1
